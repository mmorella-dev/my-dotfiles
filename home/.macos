#!/usr/bin/env bash

# ~/.macos — https://mths.be/macos

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
echo 'Closing System Preferences...'
osascript -e 'tell application "System Preferences" to quit'

echo "This script will modify many system settings. You should probably read the contents of this file before executing to see what all it does."

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

echo '###############################################################################'
echo '# General UI/UX                                                               #'
echo '###############################################################################'
echo

echo 'Set highlight and accent color to Purple.'
defaults write NSGlobalDomain AppleHighlightColor -string "0.968627 0.831373 1.000000 Purple"
defaults write NSGlobalDomain AppleAccentColor -int 5

echo 'Set Appearance to Dark.'
defaults write NSGLobalDomain AppleInterfaceStyle -string "Dark"

echo 'Set sidebar icon size to Medium.'
defaults write NSGlobalDomain NSTableViewDefaultSizeMode -int 2

# echo Show scrollbars automatically when scrolling trackpad or when using mouse
# # `WhenScrolling` || `Automatic` || `Always`
# defaults write NSGlobalDomain AppleShowScrollBars -string "Automatic"

echo 'Disable the over-the-top focus ring animation. See: https://imgur.com/a/SYHvSeS'
defaults write NSGlobalDomain NSUseAnimatedFocusRing -bool false

echo 'Increase window resize speed for Cocoa applications.'
defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

echo 'Expand save panels by default.'
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode2 -bool true

echo 'Expand print panels by default.'
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

echo 'Save to disk (not to iCloud) by default'
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

echo 'Automatically quit printer app once the print jobs complete'
defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

echo 'Disable the “Are you sure you want to open this application?” dialog'
defaults write com.apple.LaunchServices LSQuarantine -bool false

echo 'Display ASCII control characters using caret notation in standard text views'
echo 'Try e.g. `cd /tmp; unidecode "\x{0000}" > cc.txt; open -e cc.txt`'
defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

# Disable Resume system-wide
# defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false

# Disable automatic termination of inactive apps
# defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

# Disable the crash reporter
# defaults write com.apple.CrashReporter DialogType -string "none"

echo 'Set Help Viewer windows to non-floating mode'
defaults write com.apple.helpviewer DevMode -bool true

# Fix for the ancient UTF-8 bug in QuickLook (https://mths.be/bbo)
# Commented out, as this is known to cause problems in various Adobe apps :(
# See https://github.com/mathiasbynens/dotfiles/issues/237
#echo "0x08000100:0" > ~/.CFUserTextEncoding

echo 'Text: Disable automatic capitalization.'
defaults write NSGlobalDomain NSAutomaticCapitalizationEnabled -bool false

echo 'Text: Disable smart dashes.'
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

echo 'Text: Disable automatic period substitution.'
defaults write NSGlobalDomain NSAutomaticPeriodSubstitutionEnabled -bool false

# echo 'Disable smart quotes'
# defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

echo 'Text: Disable auto-correct.'
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Set a custom wallpaper image. `DefaultDesktop.jpg` is already a symlink, and
# all wallpapers are in `/Library/Desktop Pictures/`. The default is `Wave.jpg`.
# rm -rf ~/Library/Application Support/Dock/desktoppicture.db
# sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# sudo ln -s /path/to/your/image /System/Library/CoreServices/DefaultDesktop.jpg

echo '###############################################################################'
echo '# Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #'
echo '###############################################################################'

echo 'Trackpad: enable Tap to Click for this user, and for the login screen.'
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking -bool true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehavior -int 1
defaults write NSGlobalDomain com.apple.mouse.tapBehavior -int 1

echo 'Trackpad: map bottom right corner to right-click.'
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int 2
defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick -bool true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehavior -int 1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick -bool true

echo 'Increase sound quality for Bluetooth headphones/headsets.'
defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

echo 'Keyboard: Enable full keyboard access for all controls.'
echo '(e.g. Use Tab to move focus between controls)'
defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

echo 'Keyboard: Disable press-and-hold for keys in favor of key repeat.'
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

echo 'Keyboard: Set key repeat delay to the fastest settings.'
defaults write NSGlobalDomain KeyRepeat -int 2
defaults write NSGlobalDomain InitialKeyRepeat -int 15

echo 'Show language menu in the top right corner of the boot screen'
sudo defaults write /Library/Preferences/com.apple.loginwindow showInputMenu -bool true

# Stop iTunes from responding to the keyboard media keys
# launchctl unload -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null

###############################################################################
# Energy saving                                                               #
###############################################################################

echo 'Enable wakeup when system lid is opened.'
sudo pmset -a lidwake 1

echo 'Enable wakeup when connecting power sources. This is useful for docking a laptop.'
sudo pmset -a acwake 1

echo 'Restart automatically on power loss'
sudo pmset -a autorestart 1

echo 'Restart automatically if the computer freezes'
sudo systemsetup -setrestartfreeze on

echo 'Machine sleep delay (3 hours)'
sudo pmset -c sleep 180
sudo pmset -b sleep 15

echo 'Set display sleep to 10 mins on battery'
sudo pmset -c displaysleep 30
sudo pmset -b displaysleep 10

echo 'Set standby delay to 1 hours.'
sudo pmset -a standbydelay 3600 #seconds

echo 'Computer Sleep Mode: After 3 hours.'
sudo systemsetup -setcomputersleep 180 > /dev/null

echo 'Hibernation Mode: On battery, load RAM on disk to save power.'
echo 'Hibernation Mode: On charger, copy RAM to disk as backup.'
#  0: Disable hibernation (speeds up sleep and wake times)
#  3: Copy RAM to disk, so system state can be restored in case of power
#     failure (RAM remains powered)
# 25: Store RAM on disk and depower memory (improves battery life at the cost
#     of slower sleep/wake time)
sudo pmset -b hibernatemode 25
sudo pmset -c hibernatemode 3

echo '###############################################################################'
echo '# Screen                                                                      #'
echo '###############################################################################'

echo 'Require password immediately after sleep or screen saver begins.'
defaults write com.apple.screensaver askForPassword -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 5

echo 'Save screenshots to the Desktop.'
defaults write com.apple.screencapture location -string "${HOME}/Desktop"

echo 'Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF).'
defaults write com.apple.screencapture type -string "png"

echo 'Disable window shadows in screenshots.'
defaults write com.apple.screencapture disable-shadow -bool true

echo 'Enable subpixel font rendering on non-Apple LCDs.'
# Reference: https://github.com/kevinSuttle/macOS-Defaults/issues/17#issuecomment-266633501
defaults write NSGlobalDomain AppleFontSmoothing -int 1

echo 'Enable HiDPI display modes (requires restart).'
sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

echo '###############################################################################'
echo '# Finder                                                                      #'
echo '###############################################################################'

echo 'Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons.'
defaults write com.apple.finder QuitMenuItem -bool true

echo 'New Finder windows start in Desktop.'
# PfDe (desktop) || PfHm (home) || PfLo (custom)
defaults write com.apple.finder NewWindowTarget -string "PfDe"
# defaults write com.apple.finder NewWindowTargetPath -string "file:///custom/path/here/"

echo 'Show icons for hard drives, servers, and removable media on the desktop.'
defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show hidden files by default
#defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
#defaults write NSGlobalDomain AppleShowAllExtensions -bool true

echo 'Finder: show status bar.'
defaults write com.apple.finder ShowStatusBar -bool true

echo 'Finder: show path bar.'
defaults write com.apple.finder ShowPathbar -bool true

echo 'Display full POSIX path as Finder window title.'
defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

echo 'Keep folders on top when sorting by name.'
defaults write com.apple.finder _FXSortFoldersFirst -bool true

echo 'When performing a search, search the current folder by default.'
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

echo 'Disable the warning when changing a file extension.'
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

echo 'Enable spring loading for directories.'
defaults write NSGlobalDomain com.apple.springing.enabled -bool true

echo 'Remove the spring loading delay for directories.'
defaults write NSGlobalDomain com.apple.springing.delay -float 0

echo 'Avoid creating .DS_Store files on network or USB volumes.'
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true

# echo 'Disable disk image verification.'
# defaults write com.apple.frameworks.diskimages skip-verify -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

echo 'Automatically open a new Finder window when a volume is mounted.'
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

echo 'Show item info near icons on the desktop and in other icon views.'
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist

echo 'Show item info to the right of the icons on the desktop.'
/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist

echo 'Enable snap-to-grid for icons on the desktop and in other icon views.'
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

echo 'Increase grid spacing for icons on the desktop and in other icon views.'
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:gridSpacing 100" ~/Library/Preferences/com.apple.finder.plist

echo 'Increase the size of icons on the desktop and in other icon views.'
/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 80" ~/Library/Preferences/com.apple.finder.plist

echo 'Use list view in all Finder windows by default.'
# Four-letter codes for the other view modes: `icnv`, `clmv`, `glyv`
defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"

echo 'Disable the warning before emptying the Trash.'
defaults write com.apple.finder WarnOnEmptyTrash -bool false

echo 'Enable AirDrop over Ethernet.'
defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true

# echo 'Show the ~/Library folder.'
# chflags nohidden ~/Library
# Doesn't work; must enable the Library folder by
# clicking Show View Options in the home folder.

echo 'Show the /Volumes folder.'
sudo chflags nohidden /Volumes

echo 'Remove Dropbox’s green checkmark icons in Finder.'
file=/Applications/Dropbox.app/Contents/Resources/emblem-dropbox-uptodate.icns
[ -e "${file}" ] && mv -f "${file}" "${file}.bak"

echo 'Expand the following File Info panes:'
echo '“General”, “Open with”, and “Sharing & Permissions”'
defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General -bool true \
  OpenWith -bool true \
  Privileges -bool true

echo '###############################################################################'
echo '# Dock, Dashboard, and hot corners                                            #'
echo '###############################################################################'

echo 'Dock: Enable highlight hover effect for the grid view of a stack.'
defaults write com.apple.dock mouse-over-hilite-stack -bool true

echo 'Set the icon size of Dock items to 48 pixels.'
defaults write com.apple.dock tilesize -int 48

echo 'Change the dock minimize/maximize window effect to Scale.'
defaults write com.apple.dock mineffect -string "scale"

# Enable slow-motion Easter Egg (hold shift while minimizing)
# defaults write com.apple.dock slow-motion-allowed -bool YES && killall Dock

echo 'Minimize windows into their application’s icon.'
defaults write com.apple.dock minimize-to-application -bool true

echo 'Enable spring loading for all Dock items.'
defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true

echo 'Show indicator lights for open applications in the Dock.'
defaults write com.apple.dock show-process-indicators -bool true

# Wipe all (default) app icons from the Dock
# This is only really useful when setting up a new Mac, or if you don’t use
# the Dock to launch apps.
#defaults write com.apple.dock persistent-apps -array

# Show only open applications in the Dock
#defaults write com.apple.dock static-only -bool true

# Don’t animate opening applications from the Dock
# defaults write com.apple.dock launchanim -bool false

echo 'Speed up Mission Control animations.'
defaults write com.apple.dock expose-animation-duration -float 0.1

echo 'Do not group windows by application in Mission Control (i.e. use the old Exposé behavior instead).'
defaults write com.apple.dock expose-group-by-app -bool false

echo 'Remove the delay when hiding/showing the Dock.'
defaults write com.apple.dock autohide-delay -float 0
echo 'Speed up the animation when hiding/showing the Dock.'
defaults write com.apple.dock autohide-time-modifier -float 0.5

echo 'Automatically hide and show the Dock.'
defaults write com.apple.dock autohide -bool true

echo 'Make Dock icons of hidden applications translucent.'
defaults write com.apple.dock showhidden -bool true

echo 'Don’t show recent applications in Dock.'
defaults write com.apple.dock show-recents -bool false

# Reset Launchpad, but keep the desktop wallpaper intact
# find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete

# Add a spacer to the left side of the Dock (where the applications are)
#defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
# Add a spacer to the right side of the Dock (where the Trash is)
#defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'

echo 'Hot Corners:'
# Possible values:
#  0: no-op
#  2: Mission Control
#  3: Show application windows
#  4: Desktop
#  5: Start screen saver
#  6: Disable screen saver
#  7: Dashboard
# 10: Put display to sleep
# 11: Launchpad
# 12: Notification Center
# 13: Lock Screen
echo 'Top left screen corner → None.'
defaults write com.apple.dock wvous-tl-corner -int 0
defaults write com.apple.dock wvous-tl-modifier -int 0
echo 'Top right screen corner → Misson Control.'
defaults write com.apple.dock wvous-tr-corner -int 2
defaults write com.apple.dock wvous-tr-modifier -int 0
echo 'Bottom left screen corner → None.'
defaults write com.apple.dock wvous-bl-corner -int 0
defaults write com.apple.dock wvous-bl-modifier -int 0
echo 'Bottom right screen corner → None.'
defaults write com.apple.dock wvous-br-corner -int 0
defaults write com.apple.dock wvous-br-modifier -int 0

echo '###############################################################################'
echo '# Terminal & iTerm 2                                                          #'
echo '###############################################################################'

echo 'Only use UTF-8 in Terminal.app.'
defaults write com.apple.terminal StringEncodings -array 4

echo 'iTerm2: Use custom config, if possible.'
if [ -d "~/.dotfiles/iterm2" ]; then
  defaults write com.googlecode.iterm2 LoadPrefsFromCustomFolder -bool true
  defaults write com.googlecode.iterm2 PrefsCustomFolder "~/.dotfiles/iterm2"
fi
if ! find ~/.iterm2_shell_integration* > /dev/null; then
  echo 'Install iTerm2 shell integration...'
  curl -L https://iterm2.com/shell_integration/install_shell_integration_and_utilities.sh | bash
fi

echo '###############################################################################'
echo '# Time Machine                                                                #'
echo '###############################################################################'

echo 'Prevent Time Machine from prompting to use new hard drives as backup volume.'
defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

echo '###############################################################################'
echo '# Activity Monitor                                                            #'
echo '###############################################################################'

echo 'Show the main window when launching Activity Monitor.'
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

echo 'Visualize CPU usage in the Activity Monitor Dock icon.'
defaults write com.apple.ActivityMonitor IconType -int 5

echo 'Show all processes in Activity Monitor.'
defaults write com.apple.ActivityMonitor ShowCategory -int 0

echo 'Sort Activity Monitor results by CPU usage.'
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0

echo '###############################################################################'
echo '# Mac App Store                                                               #'
echo '###############################################################################'

echo 'Enable the automatic update check.'
defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true

echo 'Check for software updates daily, not just once per week.'
defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

echo 'Download newly available updates in background.'
defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1

echo 'Install System data files & security updates.'
defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1

echo 'Automatically download apps purchased on other Macs.'
defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1

echo 'Turn on app auto-update.'
defaults write com.apple.commerce AutoUpdate -bool true

echo 'Allow the App Store to reboot machine on macOS updates.'
defaults write com.apple.commerce AutoUpdateRestartRequired -bool true

echo '###############################################################################'
echo '# Photos                                                                      #'
echo '###############################################################################'

echo 'Prevent Photos from opening automatically when devices are plugged in.'
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true

echo '###############################################################################'
echo '# Kill affected applications...                                               #'
echo '###############################################################################'

for app in "Activity Monitor" \
  "Address Book" \
  "Calendar" \
  "cfprefsd" \
  "Contacts" \
  "Dock" \
  "Finder" \
  "Google Chrome Canary" \
  "Google Chrome" \
  "Mail" \
  "Messages" \
  "Opera" \
  "Photos" \
  "Safari" \
  "SizeUp" \
  "Spectacle" \
  "SystemUIServer" \
  "Terminal" \
  "Transmission" \
  "Tweetbot" \
  "Twitter" \
  "iCal"; do
  killall "${app}" &> /dev/null
done
echo "Done. Note that some of these changes require a logout/restart to take effect."

